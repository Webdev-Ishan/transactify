// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         Int           @id @default(autoincrement())
  username   String
  email      String        @unique
  password   String
  number     String        @unique
  upiID      String        @unique
  isVerified Boolean       @default(false)
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now())
  send       transaction[] @relation("Sender")
  recieved   transaction[] @relation("Reciever")
  contactID  Contact?      @relation("SenderID")
}

model transaction {
  id          Int           @id @default(autoincrement())
  amount      Float
  createdAt   DateTime      @default(now())
  completedAt DateTime?
  Status      PaymentStatus @default(PENDING)
  sender      user?         @relation("Sender", fields: [senderId], references: [id])
  senderId    Int?
  user        user?         @relation("Reciever", fields: [userId], references: [id])
  userId      Int?
}

model Otp {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model Contact {
  id       Int    @id @default(autoincrement())
  tpoic    String
  content  String
  sender   user?  @relation("SenderID", fields: [senderId], references: [id])
  senderId Int?   @unique
}

enum PaymentStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}
